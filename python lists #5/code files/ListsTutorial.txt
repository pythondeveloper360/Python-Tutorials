








Lists are used to store multiple items in a single variable.
mutable
we can change or modify without altering the variable idetify






=> index concept in python
# index  0    1    2    3    4
list = ['a', 'b', 'c', 'd', 'e']

'index starts from  zero'
'last one is -1'







=> append(object) 
    Append object to the end of the list.









=> clear()
    Remove all items from list.










=> copy()
    Return a shallow copy of the list.

"A shallow copy of an object is a copy whose properties share the same references (point to the same underlying values) as those of the source object from which the copy was made".Google












=> count(value) 
	Return number of occurrences of value.








=> extend(iterable) 
    Extend list by appending elements from the iterable.









=> index(value, start=0, stop=9223372036854775807)
    Return first index of value.
    Raises ValueError if the value is not present.

2^64 = 9223372036854775807






=> insert(index, object)
    Insert object before index.








=> pop(index=-1)
    Remove and return item at index (default last).
    Raises IndexError if list is empty or index is out of range.









=> remove(value) 
    Remove first occurrence of value.
    
    Raises ValueError if the value is not present.













=> reverse()
    Reverse *IN PLACE*.









=> sort(*, key=None, reverse=False) 
    ->Sort the list in ascending order and return None.
    ->The reverse flag can be set to sort in descending order.
















=> slicing
	list[index]







list[start:stop]
list[:stop] # 0 is default in step position





[start:stop:step]










range(start = 0,stop,step = 1)






list('abcd')





