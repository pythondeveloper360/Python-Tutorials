




Loops
'a loop is a sequence of instruction(s) that is continually repeated until a certain condition is reached' GOOGLE











There are mainly two types of loops in Python











For loop
'a for loop is used for iterating over sequence (either list,tuple)'











for letter in ['c','a','t']:
	print(letter)
print(letter)







'after this loop runs the list ['c','a','t'] is deleted and the variable that had a value of 'c' and 'a' are remove only variable with 't' remains with the name letter'

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
Breaking out of loops
'like exitting'


'create a program that adds numbers untill it comes to first negative number'

numbers = [3,5,9,-1,3,1]
























Skipping over the items in loop


numbers = [3,5,9,-1,3,1]

add all the numbers in this list except for the negative ones.

















the 'in' statements can be used for membership

animals = ['cat','dog','bird']

"check if 'dog' is in the list"
















removing items from the list during iteration
there is sample code










names = ['john','paul','george','ringo']
for name in names:
	if name not in ['john','paul']:
		names.remove(name)
print(names)






"what had happened? Python assumes that lists will not be modified while they are being iterated over. When the loop got to 'george' it removed the name from the list. Internally Python tracks the index location of the for loop. At that point there are only three items in the list 'john','paul' and ringo" but the for loop internally thinks it is on the on the index location 3 (the fourth item) and there is no fourth item so the loop stops leaving ringo in















alternative

names = ['john','paul','george','ringo']
1)
> gather the items that are not in ['john','paul']
> iterate over names and remove the items collected above





2)
> create a copy of names 
> iterate over a copy and delete from original names list
















else clauses

#'else clause after for loop will execute if the for loop did not hit the break statement'
#'continue statements does not effect else clause'














while loops



while loop keeps executing itself untill condition holds

n=5
'create a countdown'

we can also use break statement to exit while loop
'create a countdown again with'

while True:


















'calculate the average'
marks = [90,80,70,67,89,78]

sum/length











'create a list of the names of your collegues and write python programm to search for a user input if there is any'

names = ['john','paul','george','ringo','hamza','saad']





















